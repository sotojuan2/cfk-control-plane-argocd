name: KafkaTopic OPA Validation

on:
  pull_request:
    branches:
      - main
      - master

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get changed manifest files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            **/*.yaml
            **/*.yml

      - name: Echo changed manifest files
        run: |
          echo "Changed manifest files: ${{ steps.changed-files.outputs.all_changed_files }}"

      - name: Set up OPA
        uses: open-policy-agent/setup-opa@v2

      # Test the OPA validation with a hardcoded path first (for Task 5.4 testing)
      - name: Test OPA validation with hardcoded path
        run: |
          echo "Testing validation with hardcoded test manifest"
          # Using a known test manifest file for validation testing
          TEST_FILE="policies/topics_valid.yml"
          
          if [[ -f "$TEST_FILE" ]]; then
            echo "Validating $TEST_FILE..."
            opa eval --fail --input "$TEST_FILE" --data policies/kafkatopic_naming.rego 'data.kafkatopic_naming.allow'
            echo "✅ Test validation successful"
          else
            echo "❌ Test file $TEST_FILE not found. This is just a test step, continuing workflow."
          fi

      - name: OPA validation
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "Validating changed files: ${{ steps.changed-files.outputs.all_changed_files }}"
          
          # Create a flag to track validation results
          validation_failed=false
          
          # Loop through each changed YAML file
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ -f "$file" ]]; then
              echo "Validating $file..."
              
              # Check if the file contains a KafkaTopic resource
              if grep -q "kind: KafkaTopic" "$file"; then
                echo "Found KafkaTopic in $file, running OPA validation..."
                
                # Run OPA validation
                if ! opa eval --fail --input "$file" --data policies/kafkatopic_naming.rego 'data.kafkatopic_naming.allow'; then
                  echo "❌ Validation failed for $file"
                  validation_failed=true
                  
                  # Show the specific deny messages
                  echo "Denial reasons:"
                  opa eval --input "$file" --data policies/kafkatopic_naming.rego 'data.kafkatopic_naming.deny'
                else
                  echo "✅ Validation passed for $file"
                fi
              else
                echo "Skipping $file (not a KafkaTopic resource)"
              fi
            else
              echo "Warning: File $file not found"
            fi
          done
          
          # Fail the job if any validation failed
          if [ "$validation_failed" = true ]; then
            echo "❌ One or more KafkaTopic resources failed validation"
            exit 1
          else
            echo "✅ All KafkaTopic resources passed validation"
          fi

      - name: No files to validate
        if: steps.changed-files.outputs.any_changed != 'true'
        run: echo "No YAML files were changed in this PR"
